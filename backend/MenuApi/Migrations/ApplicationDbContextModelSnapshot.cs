// <auto-generated />
using System;
using MenuApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MenuApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MenuApi.Models.Entities.MenuGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("MenuGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Icon = "📦",
                            IsVisible = true,
                            Name = "CLIENT PRODUCT"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Icon = "📊",
                            IsVisible = true,
                            Name = "CLIENT REPORTING"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Icon = "🎯",
                            IsVisible = true,
                            Name = "PGIM DEMO"
                        });
                });

            modelBuilder.Entity("MenuApi.Models.Entities.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<int?>("MenuGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuGroupId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "View your dashboard",
                            DisplayOrder = 1,
                            Icon = "📊",
                            IsVisible = true,
                            MenuGroupId = 1,
                            Name = "Dashboard",
                            Type = 0,
                            Url = "/dashboard"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manage users",
                            DisplayOrder = 2,
                            Icon = "👥",
                            IsVisible = true,
                            MenuGroupId = 1,
                            Name = "Users",
                            Type = 0,
                            Url = "/users"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Application settings",
                            DisplayOrder = 3,
                            Icon = "⚙️",
                            IsVisible = true,
                            MenuGroupId = 1,
                            Name = "Settings",
                            Type = 0,
                            Url = "/settings"
                        },
                        new
                        {
                            Id = 4,
                            Description = "View and generate reports",
                            DisplayOrder = 1,
                            Icon = "📈",
                            IsVisible = true,
                            MenuGroupId = 2,
                            Name = "Reports",
                            Type = 0,
                            Url = "/reports"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Power BI Risk Dashboard",
                            DisplayOrder = 1,
                            Icon = "⚠️",
                            IsVisible = true,
                            MenuGroupId = 3,
                            Name = "Risk Dashboard",
                            Type = 1,
                            Url = "/powerbi/risk"
                        });
                });

            modelBuilder.Entity("MenuApi.Models.Entities.PowerBIConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AutoRefreshInterval")
                        .HasColumnType("int");

                    b.Property<string>("DefaultZoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmbedUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("ReportId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowFilterPanel")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowFilterPanelExpanded")
                        .HasColumnType("bit");

                    b.Property<string>("WorkspaceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId")
                        .IsUnique();

                    b.ToTable("PowerBIConfigs");
                });

            modelBuilder.Entity("MenuApi.Models.Entities.MenuGroup", b =>
                {
                    b.HasOne("MenuApi.Models.Entities.MenuGroup", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MenuApi.Models.Entities.MenuItem", b =>
                {
                    b.HasOne("MenuApi.Models.Entities.MenuGroup", "MenuGroup")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MenuGroup");
                });

            modelBuilder.Entity("MenuApi.Models.Entities.PowerBIConfig", b =>
                {
                    b.HasOne("MenuApi.Models.Entities.MenuItem", "MenuItem")
                        .WithOne("PowerBIConfig")
                        .HasForeignKey("MenuApi.Models.Entities.PowerBIConfig", "MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("MenuApi.Models.Entities.MenuGroup", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("MenuApi.Models.Entities.MenuItem", b =>
                {
                    b.Navigation("PowerBIConfig");
                });
#pragma warning restore 612, 618
        }
    }
}
